{"version":3,"sources":["components/CountryInfo/CountryInfo.module.css","components/Countries/Countries.module.css","components/UI/LoadingSpinner.module.css","components/NavBar/MainHeader.module.css","components/Countries/Country.module.css","redux/countries-slice.js","redux/country-info.js","redux/loading-slice.js","components/UI/LoadingSpinner.jsx","components/CountryInfo/CountryInfo.jsx","images/left-arrow.svg","images/mic-icon.svg","images/settings-icon.svg","components/NavBar/MainHeader.jsx","pages/DetailsPage.jsx","components/Countries/Country.jsx","components/Countries/Countries.jsx","pages/HomePage.jsx","redux/countries-action.js","App.js","redux/store.js","index.js"],"names":["module","exports","countriesSlice","createSlice","name","initialState","countries","countryInfo","reducers","getCountries","state","action","push","payload","getCountryInfo","actions","getCountryInfoFromApi","countryName","dispatch","a","fetch","response","ok","Error","json","data","forEach","country","official","capital","region","timezone","timezones","flag","flags","svg","population","area","alert","message","loadingSlice","isLoading","setIsLoading","LoadingSpinner","className","classes","spinner","CountryInfo","params","useParams","useDispatch","useSelector","loading","useEffect","timer","setTimeout","clearTimeout","length","detailsSection","detailsTop","src","alt","detailsBottom","toFixed","MainHeader","title","nav","to","leftArrow","mic","settings","DetailsPage","Country","props","onClick","Countries","useState","input","setInput","filteredData","filter","Object","keys","some","key","toLowerCase","includes","type","search","placeholder","value","onChange","e","target","required","listCountries","map","HomePage","getCountriesFromApi","countriesData","common","App","path","element","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById","createElement"],"mappings":"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","file":"static/js/main.de47d04c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailsSection\":\"CountryInfo_detailsSection__2IyBW\",\"detailsTop\":\"CountryInfo_detailsTop__3oUYd\",\"detailsBottom\":\"CountryInfo_detailsBottom__2ssws\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Countries_search__kSuld\",\"listCountries\":\"Countries_listCountries__8YMYh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__3ERHB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"MainHeader_nav__3JfYN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"country\":\"Country_country__3Wxru\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst countriesSlice = createSlice({\r\n  name: \"countriesSlice\",\r\n  initialState: {\r\n    countries: [],\r\n    countryInfo: [],\r\n  },\r\n  reducers: {\r\n    getCountries(state, action) {\r\n      state.countries.push(...action.payload);\r\n    },\r\n    getCountryInfo(state, action) {\r\n      state.countryInfo.push(...action.payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getCountries, getCountryInfo } = countriesSlice.actions;\r\n\r\nexport default countriesSlice.reducer;\r\n","import { getCountryInfo } from \"./countries-slice\";\r\n\r\nconst getCountryInfoFromApi = (countryName) => async (dispatch) => {\r\n  try {\r\n    const response = await fetch(\r\n      `https://restcountries.com/v3.1/name/${countryName}`\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error(\"Somthing went wrong when fetching country info via API\");\r\n    }\r\n\r\n    const data = await response.json();\r\n\r\n    const countryInfo = [];\r\n    data.forEach((country) => {\r\n      countryInfo.push({\r\n        official: country.name.official,\r\n        capital: country.capital[0],\r\n        region: country.region,\r\n        timezone: country.timezones[0],\r\n        flag: country.flags.svg,\r\n        population: country.population,\r\n        area: country.area,\r\n      });\r\n    });\r\n\r\n    dispatch(getCountryInfo(countryInfo));\r\n  } catch (err) {\r\n    alert(err.message);\r\n  }\r\n};\r\n\r\nexport default getCountryInfoFromApi;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst loadingSlice = createSlice({\r\n  name: \"loadingSlice\",\r\n  initialState: {\r\n    isLoading: true,\r\n  },\r\n  reducers: {\r\n    setIsLoading(state, action) {\r\n      state.isLoading = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setIsLoading } = loadingSlice.actions;\r\n\r\nexport default loadingSlice.reducer;\r\n","import classes from \"./LoadingSpinner.module.css\";\r\n\r\nconst LoadingSpinner = () => {\r\n  return <div className={classes.spinner}></div>;\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import { Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport getCountryInfoFromApi from \"../../redux/country-info\";\r\nimport { setIsLoading } from \"../../redux/loading-slice\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\n\r\nimport classes from \"./CountryInfo.module.css\";\r\n\r\nconst CountryInfo = () => {\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n  const countryInfo = useSelector((state) => state.country.countryInfo);\r\n  const isLoading = useSelector((state) => state.loading.isLoading);\r\n\r\n  const { countryName } = params;\r\n\r\n  useEffect(() => {\r\n    dispatch(getCountryInfoFromApi(countryName));\r\n\r\n    const timer = setTimeout(() => {\r\n      dispatch(setIsLoading(false));\r\n    }, 300);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [dispatch, countryName]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {countryInfo.length > 0 && (\r\n        <section className={classes.detailsSection}>\r\n          <div className={classes.detailsTop}>\r\n            <img src={countryInfo[countryInfo.length - 1].flag} alt=\"flag\" />\r\n            <div>\r\n              <h2>{countryName}</h2>\r\n              <h4>{countryInfo[countryInfo.length - 1].region}</h4>\r\n            </div>\r\n          </div>\r\n          <ul className={classes.detailsBottom}>\r\n            <li>\r\n              <span>🎌 Official Name:</span>\r\n              <p>{countryInfo[countryInfo.length - 1].official}</p>\r\n            </li>\r\n            <li>\r\n              <span>🌆 Capital:</span>\r\n              <p>{countryInfo[countryInfo.length - 1].capital}</p>\r\n            </li>\r\n            <li>\r\n              <span>⭕ Area:</span>\r\n              <p>{+countryInfo[countryInfo.length - 1].area} km2</p>\r\n            </li>\r\n            <li>\r\n              <span>🤼 Population:</span>\r\n              <p>\r\n                {(\r\n                  +countryInfo[countryInfo.length - 1].population / 1000000\r\n                ).toFixed(1)}{\" \"}\r\n                million\r\n              </p>\r\n            </li>\r\n            <li>\r\n              <span>⏳ Time Zone:</span>\r\n              <p>{countryInfo[countryInfo.length - 1].timezone}</p>\r\n            </li>\r\n          </ul>\r\n        </section>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CountryInfo;\r\n","export default __webpack_public_path__ + \"static/media/left-arrow.e4894e7d.svg\";","export default __webpack_public_path__ + \"static/media/mic-icon.a1a792b3.svg\";","export default __webpack_public_path__ + \"static/media/settings-icon.c097a47c.svg\";","import { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classes from \"./MainHeader.module.css\";\r\nimport leftArrow from \"../../images/left-arrow.svg\";\r\nimport mic from \"../../images/mic-icon.svg\";\r\nimport settings from \"../../images/settings-icon.svg\";\r\n\r\nconst MainHeader = ({ title }) => {\r\n  return (\r\n    <header>\r\n      <nav className={classes.nav}>\r\n        {title === \"Country Info\" && (\r\n          <div>\r\n            <Link to=\"/\">\r\n              <img src={leftArrow} alt=\"Back to home page\" />\r\n            </Link>\r\n          </div>\r\n        )}\r\n        <div>{title}</div>\r\n        <div>\r\n          <img src={mic} alt=\"Mic\" />\r\n          <img src={settings} alt=\"Settings\" />\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nMainHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default MainHeader;\r\n","import { Fragment } from \"react\";\r\nimport CountryInfo from \"../components/CountryInfo/CountryInfo\";\r\nimport MainHeader from \"../components/NavBar/MainHeader\";\r\n\r\nconst DetailsPage = () => {\r\n  return (\r\n    <Fragment>\r\n      <MainHeader title=\"Country Info\" />\r\n      <CountryInfo />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default DetailsPage;\r\n","import PropTypes from \"prop-types\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { setIsLoading } from \"../../redux/loading-slice\";\r\n\r\nimport classes from \"./Country.module.css\";\r\n\r\nconst Country = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <li\r\n      className={classes.country}\r\n      onClick={() => dispatch(setIsLoading(true))}\r\n    >\r\n      <Link to={`/${props.name}`}>\r\n        <figure>\r\n          <img src={props.flag} alt=\"flag\" />\r\n          <figcaption>{props.name}</figcaption>\r\n        </figure>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nCountry.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  flag: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Country;\r\n","import { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Country from \"./Country\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\n\r\nimport classes from \"./Countries.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setIsLoading } from \"../../redux/loading-slice\";\r\n\r\nconst Countries = (props) => {\r\n  const [input, setInput] = useState(\"\");\r\n  const isLoading = useSelector((state) => state.loading.isLoading);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      dispatch(setIsLoading(false));\r\n    }, 1500);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [dispatch]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const filteredData = props.countries.filter((country) => {\r\n    const data = Object.keys(country).some((key) => {\r\n      const checkInput = country[key]\r\n        .toLowerCase()\r\n        .includes(input.toLowerCase());\r\n      return checkInput;\r\n    });\r\n\r\n    return data;\r\n  });\r\n\r\n  return (\r\n    <section>\r\n      <input\r\n        type=\"search\"\r\n        className={classes.search}\r\n        placeholder=\"Search by country name\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        required\r\n      />\r\n      <ul className={classes.listCountries}>\r\n        {filteredData.map((country) => (\r\n          <Country\r\n            key={country.countryName}\r\n            name={country.countryName}\r\n            flag={country.flag}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nCountries.propTypes = {\r\n  countries: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n};\r\n\r\nexport default Countries;\r\n","import PropTypes from \"prop-types\";\r\nimport { Fragment } from \"react\";\r\nimport Countries from \"../components/Countries/Countries\";\r\nimport MainHeader from \"../components/NavBar/MainHeader\";\r\n\r\nconst HomePage = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <MainHeader title=\"World Data\" />\r\n      <Countries countries={props.countries} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nHomePage.propTypes = {\r\n  countries: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n};\r\n\r\nexport default HomePage;\r\n","import { getCountries } from \"./countries-slice\";\r\n\r\nconst getCountriesFromApi = () => async (dispatch) => {\r\n  try {\r\n    const response = await fetch(\"https://restcountries.com/v3.1/all\");\r\n    if (!response.ok) {\r\n      throw new Error(\"Somthing went wrong when fetching countries via API\");\r\n    }\r\n\r\n    const data = await response.json();\r\n\r\n    const countriesData = [];\r\n    data.forEach((country) => {\r\n      countriesData.push({\r\n        countryName: country.name.common,\r\n        flag: country.flags.svg,\r\n      });\r\n    });\r\n\r\n    dispatch(getCountries(countriesData));\r\n  } catch (err) {\r\n    alert(err.message);\r\n  }\r\n};\r\n\r\nexport default getCountriesFromApi;\r\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Route, Routes } from \"react-router-dom\";\nimport DetailsPage from \"./pages/DetailsPage\";\n\nimport HomePage from \"./pages/HomePage\";\nimport getCountriesFromApi from \"./redux/countries-action\";\nimport { setIsLoading } from \"./redux/loading-slice\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const countries = useSelector((state) => state.country.countries);\n\n  useEffect(() => {\n    dispatch(getCountriesFromApi());\n    dispatch(setIsLoading(true));\n  }, [dispatch]);\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<HomePage countries={countries} />} />\n      <Route path=\"/:countryName\" element={<DetailsPage />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport countriesSlice from \"./countries-slice\";\r\nimport loadingSlice from \"./loading-slice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    country: countriesSlice,\r\n    loading: loadingSlice,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\") || document.createElement(\"div\")\n);\n"],"sourceRoot":""}