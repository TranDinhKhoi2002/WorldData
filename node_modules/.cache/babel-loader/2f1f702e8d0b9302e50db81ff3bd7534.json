{"ast":null,"code":"import _asyncToGenerator from\"D:/Project_ReactJS/WorldData/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"D:\\\\Project_ReactJS\\\\WorldData\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{getCountryInfo}from\"./countries-slice\";var getCountryInfoFromApi=function getCountryInfoFromApi(countryName){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response,data,countryInfo;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"https://restcountries.com/v3.1/name/\".concat(countryName));case 3:response=_context.sent;if(response.ok){_context.next=6;break;}throw new Error(\"Somthing went wrong when fetching country info via API\");case 6:_context.next=8;return response.json();case 8:data=_context.sent;countryInfo=[];data.forEach(function(country){countryInfo.push({official:country.name.official,capital:country.capital[0],region:country.region,timezone:country.timezones[0],flag:country.flags.svg,population:country.population,area:country.area});});dispatch(getCountryInfo(countryInfo));_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](0);alert(_context.t0.message);case 17:case\"end\":return _context.stop();}}},_callee,null,[[0,14]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export default getCountryInfoFromApi;","map":{"version":3,"sources":["D:/Project_ReactJS/WorldData/src/redux/country-info.js"],"names":["getCountryInfo","getCountryInfoFromApi","countryName","dispatch","fetch","response","ok","Error","json","data","countryInfo","forEach","country","push","official","name","capital","region","timezone","timezones","flag","flags","svg","population","area","alert","message"],"mappings":"8OAAA,OAASA,cAAT,KAA+B,mBAA/B,CAEA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,WAAD,iGAAiB,iBAAOC,QAAP,sLAEpBC,CAAAA,KAAK,+CACaF,WADb,EAFe,QAErCG,QAFqC,kBAKtCA,QAAQ,CAACC,EAL6B,8BAMnC,IAAIC,CAAAA,KAAJ,CAAU,wDAAV,CANmC,8BASxBF,CAAAA,QAAQ,CAACG,IAAT,EATwB,QASrCC,IATqC,eAWrCC,WAXqC,CAWvB,EAXuB,CAY3CD,IAAI,CAACE,OAAL,CAAa,SAACC,OAAD,CAAa,CACxBF,WAAW,CAACG,IAAZ,CAAiB,CACfC,QAAQ,CAAEF,OAAO,CAACG,IAAR,CAAaD,QADR,CAEfE,OAAO,CAAEJ,OAAO,CAACI,OAAR,CAAgB,CAAhB,CAFM,CAGfC,MAAM,CAAEL,OAAO,CAACK,MAHD,CAIfC,QAAQ,CAAEN,OAAO,CAACO,SAAR,CAAkB,CAAlB,CAJK,CAKfC,IAAI,CAAER,OAAO,CAACS,KAAR,CAAcC,GALL,CAMfC,UAAU,CAAEX,OAAO,CAACW,UANL,CAOfC,IAAI,CAAEZ,OAAO,CAACY,IAPC,CAAjB,EASD,CAVD,EAYArB,QAAQ,CAACH,cAAc,CAACU,WAAD,CAAf,CAAR,CAxB2C,iFA0B3Ce,KAAK,CAAC,YAAIC,OAAL,CAAL,CA1B2C,qEAAjB,gEAA9B,CA8BA,cAAezB,CAAAA,qBAAf","sourcesContent":["import { getCountryInfo } from \"./countries-slice\";\r\n\r\nconst getCountryInfoFromApi = (countryName) => async (dispatch) => {\r\n  try {\r\n    const response = await fetch(\r\n      `https://restcountries.com/v3.1/name/${countryName}`\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error(\"Somthing went wrong when fetching country info via API\");\r\n    }\r\n\r\n    const data = await response.json();\r\n\r\n    const countryInfo = [];\r\n    data.forEach((country) => {\r\n      countryInfo.push({\r\n        official: country.name.official,\r\n        capital: country.capital[0],\r\n        region: country.region,\r\n        timezone: country.timezones[0],\r\n        flag: country.flags.svg,\r\n        population: country.population,\r\n        area: country.area,\r\n      });\r\n    });\r\n\r\n    dispatch(getCountryInfo(countryInfo));\r\n  } catch (err) {\r\n    alert(err.message);\r\n  }\r\n};\r\n\r\nexport default getCountryInfoFromApi;\r\n"]},"metadata":{},"sourceType":"module"}