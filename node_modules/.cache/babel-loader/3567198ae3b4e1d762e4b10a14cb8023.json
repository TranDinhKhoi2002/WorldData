{"ast":null,"code":"import _asyncToGenerator from\"D:/Project_ReactJS/WorldData/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"D:\\\\Project_ReactJS\\\\WorldData\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{getCountries}from\"./countries-slice\";var getCountriesFromApi=function getCountriesFromApi(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response,data,countriesData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"https://restcountries.com/v3.1/all\");case 3:response=_context.sent;if(response.ok){_context.next=6;break;}throw new Error(\"Somthing went wrong when fetching countries via API\");case 6:_context.next=8;return response.json();case 8:data=_context.sent;countriesData=[];data.forEach(function(country){countriesData.push({countryName:country.name.common,flag:country.flags.svg});});dispatch(getCountries(countriesData));_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](0);alert(_context.t0.message);case 17:case\"end\":return _context.stop();}}},_callee,null,[[0,14]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export default getCountriesFromApi;","map":{"version":3,"sources":["D:/Project_ReactJS/WorldData/src/redux/countries-action.js"],"names":["getCountries","getCountriesFromApi","dispatch","fetch","response","ok","Error","json","data","countriesData","forEach","country","push","countryName","name","common","flag","flags","svg","alert","message"],"mappings":"8OAAA,OAASA,YAAT,KAA6B,mBAA7B,CAEA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,kGAAM,iBAAOC,QAAP,wLAEPC,CAAAA,KAAK,CAAC,oCAAD,CAFE,QAExBC,QAFwB,kBAGzBA,QAAQ,CAACC,EAHgB,8BAItB,IAAIC,CAAAA,KAAJ,CAAU,qDAAV,CAJsB,8BAOXF,CAAAA,QAAQ,CAACG,IAAT,EAPW,QAOxBC,IAPwB,eASxBC,aATwB,CASR,EATQ,CAU9BD,IAAI,CAACE,OAAL,CAAa,SAACC,OAAD,CAAa,CACxBF,aAAa,CAACG,IAAd,CAAmB,CACjBC,WAAW,CAAEF,OAAO,CAACG,IAAR,CAAaC,MADT,CAEjBC,IAAI,CAAEL,OAAO,CAACM,KAAR,CAAcC,GAFH,CAAnB,EAID,CALD,EAOAhB,QAAQ,CAACF,YAAY,CAACS,aAAD,CAAb,CAAR,CAjB8B,iFAmB9BU,KAAK,CAAC,YAAIC,OAAL,CAAL,CAnB8B,qEAAN,gEAA5B,CAuBA,cAAenB,CAAAA,mBAAf","sourcesContent":["import { getCountries } from \"./countries-slice\";\r\n\r\nconst getCountriesFromApi = () => async (dispatch) => {\r\n  try {\r\n    const response = await fetch(\"https://restcountries.com/v3.1/all\");\r\n    if (!response.ok) {\r\n      throw new Error(\"Somthing went wrong when fetching countries via API\");\r\n    }\r\n\r\n    const data = await response.json();\r\n\r\n    const countriesData = [];\r\n    data.forEach((country) => {\r\n      countriesData.push({\r\n        countryName: country.name.common,\r\n        flag: country.flags.svg,\r\n      });\r\n    });\r\n\r\n    dispatch(getCountries(countriesData));\r\n  } catch (err) {\r\n    alert(err.message);\r\n  }\r\n};\r\n\r\nexport default getCountriesFromApi;\r\n"]},"metadata":{},"sourceType":"module"}