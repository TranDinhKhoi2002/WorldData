{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project_ReactJS\\\\WorldData\\\\src\\\\components\\\\Countries\\\\Countries.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Country from \"./Country\";\nimport classes from \"./Countries.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setIsLoading, setIsNotLoading } from \"../../redux/loading-slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Countries = props => {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const dispatch = useDispatch();\n  const isLoading = useSelector(state => state.loading.isLoading);\n  useEffect(() => {\n    dispatch(setIsLoading(true));\n    setTimeout(() => {\n      dispatch(setIsNotLoading(false));\n    });\n  }, [dispatch]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n\n  const filteredData = props.countries.filter(country => {\n    const data = Object.keys(country).some(key => {\n      const checkInput = country[key].toLowerCase().includes(input.toLowerCase());\n      return checkInput;\n    });\n    return data;\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      className: classes.search,\n      placeholder: \"Search by country name\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.listCountries,\n      children: filteredData.map(country => /*#__PURE__*/_jsxDEV(Country, {\n        name: country.countryName,\n        flag: country.flag\n      }, country.countryName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Countries, \"KbVofzh6rxRhQQUHmhA/Gb63OTY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Countries;\nCountries.propTypes = {\n  countries: PropTypes.arrayOf(PropTypes.shape({})).isRequired\n};\nexport default Countries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"sources":["D:/Project_ReactJS/WorldData/src/components/Countries/Countries.jsx"],"names":["useEffect","useState","PropTypes","Country","classes","useDispatch","useSelector","setIsLoading","setIsNotLoading","Countries","props","input","setInput","dispatch","isLoading","state","loading","setTimeout","filteredData","countries","filter","country","data","Object","keys","some","key","checkInput","toLowerCase","includes","search","e","target","value","listCountries","map","countryName","flag","propTypes","arrayOf","shape","isRequired"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,2BAA9C;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMY,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,SAAS,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcF,SAA1B,CAA7B;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,CAACN,YAAY,CAAC,IAAD,CAAb,CAAR;AAEAU,IAAAA,UAAU,CAAC,MAAM;AACfJ,MAAAA,QAAQ,CAACL,eAAe,CAAC,KAAD,CAAhB,CAAR;AACD,KAFS,CAAV;AAGD,GANQ,EAMN,CAACK,QAAD,CANM,CAAT;;AAQA,MAAIC,SAAJ,EAAe;AACb,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,QAAMI,YAAY,GAAGR,KAAK,CAACS,SAAN,CAAgBC,MAAhB,CAAwBC,OAAD,IAAa;AACvD,UAAMC,IAAI,GAAGC,MAAM,CAACC,IAAP,CAAYH,OAAZ,EAAqBI,IAArB,CAA2BC,GAAD,IAAS;AAC9C,YAAMC,UAAU,GAAGN,OAAO,CAACK,GAAD,CAAP,CAChBE,WADgB,GAEhBC,QAFgB,CAEPlB,KAAK,CAACiB,WAAN,EAFO,CAAnB;AAGA,aAAOD,UAAP;AACD,KALY,CAAb;AAOA,WAAOL,IAAP;AACD,GAToB,CAArB;AAWA,sBACE;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAElB,OAAO,CAAC0B,MAFrB;AAGE,MAAA,WAAW,EAAC,wBAHd;AAIE,MAAA,KAAK,EAAEnB,KAJT;AAKE,MAAA,QAAQ,EAAGoB,CAAD,IAAOnB,QAAQ,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV,CAL3B;AAME,MAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAI,MAAA,SAAS,EAAE7B,OAAO,CAAC8B,aAAvB;AAAA,gBACGhB,YAAY,CAACiB,GAAb,CAAkBd,OAAD,iBAChB,QAAC,OAAD;AAEE,QAAA,IAAI,EAAEA,OAAO,CAACe,WAFhB;AAGE,QAAA,IAAI,EAAEf,OAAO,CAACgB;AAHhB,SACOhB,OAAO,CAACe,WADf;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAjDD;;GAAM3B,S;UAEaJ,W,EACCC,W;;;KAHdG,S;AAmDNA,SAAS,CAAC6B,SAAV,GAAsB;AACpBnB,EAAAA,SAAS,EAAEjB,SAAS,CAACqC,OAAV,CAAkBrC,SAAS,CAACsC,KAAV,CAAgB,EAAhB,CAAlB,EAAuCC;AAD9B,CAAtB;AAIA,eAAehC,SAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Country from \"./Country\";\r\n\r\nimport classes from \"./Countries.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setIsLoading, setIsNotLoading } from \"../../redux/loading-slice\";\r\n\r\nconst Countries = (props) => {\r\n  const [input, setInput] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector((state) => state.loading.isLoading);\r\n\r\n  useEffect(() => {\r\n    dispatch(setIsLoading(true));\r\n\r\n    setTimeout(() => {\r\n      dispatch(setIsNotLoading(false));\r\n    });\r\n  }, [dispatch]);\r\n\r\n  if (isLoading) {\r\n    return <h2>Loading</h2>;\r\n  }\r\n\r\n  const filteredData = props.countries.filter((country) => {\r\n    const data = Object.keys(country).some((key) => {\r\n      const checkInput = country[key]\r\n        .toLowerCase()\r\n        .includes(input.toLowerCase());\r\n      return checkInput;\r\n    });\r\n\r\n    return data;\r\n  });\r\n\r\n  return (\r\n    <section>\r\n      <input\r\n        type=\"search\"\r\n        className={classes.search}\r\n        placeholder=\"Search by country name\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        required\r\n      />\r\n      <ul className={classes.listCountries}>\r\n        {filteredData.map((country) => (\r\n          <Country\r\n            key={country.countryName}\r\n            name={country.countryName}\r\n            flag={country.flag}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nCountries.propTypes = {\r\n  countries: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n};\r\n\r\nexport default Countries;\r\n"]},"metadata":{},"sourceType":"module"}