{"ast":null,"code":"import _slicedToArray from\"D:/Project_ReactJS/WorldData/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";import Country from\"./Country\";import LoadingSpinner from\"../UI/LoadingSpinner\";import classes from\"./Countries.module.css\";import{useDispatch,useSelector}from\"react-redux\";import{setIsLoading}from\"../../redux/loading-slice\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Countries=function Countries(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),input=_useState2[0],setInput=_useState2[1];var isLoading=useSelector(function(state){return state.loading.isLoading;});var dispatch=useDispatch();useEffect(function(){var timer=setTimeout(function(){dispatch(setIsLoading(false));},1500);return function(){clearTimeout(timer);};},[dispatch]);if(isLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"centered\",children:/*#__PURE__*/_jsx(LoadingSpinner,{})});}var filteredData=props.countries.filter(function(country){var data=Object.keys(country).some(function(key){var checkInput=country[key].toLowerCase().includes(input.toLowerCase());return checkInput;});return data;});return/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"search\",className:classes.search,placeholder:\"Search by country name\",value:input,onChange:function onChange(e){return setInput(e.target.value);},required:true}),/*#__PURE__*/_jsx(\"ul\",{className:classes.listCountries,children:filteredData.map(function(country){return/*#__PURE__*/_jsx(Country,{name:country.countryName,flag:country.flag},country.countryName);})})]});};export default Countries;","map":{"version":3,"sources":["D:/Project_ReactJS/WorldData/src/components/Countries/Countries.jsx"],"names":["useEffect","useState","Country","LoadingSpinner","classes","useDispatch","useSelector","setIsLoading","Countries","props","input","setInput","isLoading","state","loading","dispatch","timer","setTimeout","clearTimeout","filteredData","countries","filter","country","data","Object","keys","some","key","checkInput","toLowerCase","includes","search","e","target","value","listCountries","map","countryName","flag"],"mappings":"kHAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,cAAP,KAA2B,sBAA3B,CAEA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,YAAT,KAA6B,2BAA7B,C,wFAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CAC3B,cAA0BR,QAAQ,CAAC,EAAD,CAAlC,wCAAOS,KAAP,eAAcC,QAAd,eACA,GAAMC,CAAAA,SAAS,CAAGN,WAAW,CAAC,SAACO,KAAD,QAAWA,CAAAA,KAAK,CAACC,OAAN,CAAcF,SAAzB,EAAD,CAA7B,CACA,GAAMG,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CAEAL,SAAS,CAAC,UAAM,CACd,GAAMgB,CAAAA,KAAK,CAAGC,UAAU,CAAC,UAAM,CAC7BF,QAAQ,CAACR,YAAY,CAAC,KAAD,CAAb,CAAR,CACD,CAFuB,CAErB,IAFqB,CAAxB,CAIA,MAAO,WAAM,CACXW,YAAY,CAACF,KAAD,CAAZ,CACD,CAFD,CAGD,CARQ,CAQN,CAACD,QAAD,CARM,CAAT,CAUA,GAAIH,SAAJ,CAAe,CACb,mBACE,YAAK,SAAS,CAAC,UAAf,uBACE,KAAC,cAAD,IADF,EADF,CAKD,CAED,GAAMO,CAAAA,YAAY,CAAGV,KAAK,CAACW,SAAN,CAAgBC,MAAhB,CAAuB,SAACC,OAAD,CAAa,CACvD,GAAMC,CAAAA,IAAI,CAAGC,MAAM,CAACC,IAAP,CAAYH,OAAZ,EAAqBI,IAArB,CAA0B,SAACC,GAAD,CAAS,CAC9C,GAAMC,CAAAA,UAAU,CAAGN,OAAO,CAACK,GAAD,CAAP,CAChBE,WADgB,GAEhBC,QAFgB,CAEPpB,KAAK,CAACmB,WAAN,EAFO,CAAnB,CAGA,MAAOD,CAAAA,UAAP,CACD,CALY,CAAb,CAOA,MAAOL,CAAAA,IAAP,CACD,CAToB,CAArB,CAWA,mBACE,wCACE,cACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAEnB,OAAO,CAAC2B,MAFrB,CAGE,WAAW,CAAC,wBAHd,CAIE,KAAK,CAAErB,KAJT,CAKE,QAAQ,CAAE,kBAACsB,CAAD,QAAOrB,CAAAA,QAAQ,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf,EALZ,CAME,QAAQ,KANV,EADF,cASE,WAAI,SAAS,CAAE9B,OAAO,CAAC+B,aAAvB,UACGhB,YAAY,CAACiB,GAAb,CAAiB,SAACd,OAAD,qBAChB,KAAC,OAAD,EAEE,IAAI,CAAEA,OAAO,CAACe,WAFhB,CAGE,IAAI,CAAEf,OAAO,CAACgB,IAHhB,EACOhB,OAAO,CAACe,WADf,CADgB,EAAjB,CADH,EATF,GADF,CAqBD,CAvDD,CA6DA,cAAe7B,CAAAA,SAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Country from \"./Country\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\n\r\nimport classes from \"./Countries.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setIsLoading } from \"../../redux/loading-slice\";\r\n\r\nconst Countries = (props) => {\r\n  const [input, setInput] = useState(\"\");\r\n  const isLoading = useSelector((state) => state.loading.isLoading);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      dispatch(setIsLoading(false));\r\n    }, 1500);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [dispatch]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const filteredData = props.countries.filter((country) => {\r\n    const data = Object.keys(country).some((key) => {\r\n      const checkInput = country[key]\r\n        .toLowerCase()\r\n        .includes(input.toLowerCase());\r\n      return checkInput;\r\n    });\r\n\r\n    return data;\r\n  });\r\n\r\n  return (\r\n    <section>\r\n      <input\r\n        type=\"search\"\r\n        className={classes.search}\r\n        placeholder=\"Search by country name\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        required\r\n      />\r\n      <ul className={classes.listCountries}>\r\n        {filteredData.map((country) => (\r\n          <Country\r\n            key={country.countryName}\r\n            name={country.countryName}\r\n            flag={country.flag}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nCountries.propTypes = {\r\n  countries: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n};\r\n\r\nexport default Countries;\r\n"]},"metadata":{},"sourceType":"module"}