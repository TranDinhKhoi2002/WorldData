{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project_ReactJS\\\\WorldData\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Route, Routes } from \"react-router-dom\";\nimport DetailsPage from \"./pages/DetailsPage\";\nimport HomePage from \"./pages/HomePage\";\nimport getCountriesFromApi from \"./redux/countries-action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const countries = useSelector(state => state.country.countries);\n  const isLoading = useSelector(state => state.loading.isLoading);\n  useEffect(() => {\n    dispatch(getCountriesFromApi());\n  }, [dispatch]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(HomePage, {\n        countries: countries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/:countryName\",\n      element: /*#__PURE__*/_jsxDEV(DetailsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Dlfms7szzZBMjDHvGQSjUOycjnY=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Project_ReactJS/WorldData/src/App.js"],"names":["useEffect","useDispatch","useSelector","Route","Routes","DetailsPage","HomePage","getCountriesFromApi","App","dispatch","countries","state","country","isLoading","loading"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,mBAAP,MAAgC,0BAAhC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,SAAS,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcF,SAA1B,CAA7B;AACA,QAAMG,SAAS,GAAGX,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACG,OAAN,CAAcD,SAA1B,CAA7B;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACF,mBAAmB,EAApB,CAAR;AACD,GAFQ,EAEN,CAACE,QAAD,CAFM,CAAT;;AAIA,MAAII,SAAJ,EAAe;AACb,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,OAAO,eAAE,QAAC,QAAD;AAAU,QAAA,SAAS,EAAEH;AAArB;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,eAAZ;AAA4B,MAAA,OAAO,eAAE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAnBQF,G;UACUP,W,EACCC,W,EACAA,W;;;KAHXM,G;AAqBT,eAAeA,GAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Route, Routes } from \"react-router-dom\";\nimport DetailsPage from \"./pages/DetailsPage\";\n\nimport HomePage from \"./pages/HomePage\";\nimport getCountriesFromApi from \"./redux/countries-action\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const countries = useSelector((state) => state.country.countries);\n  const isLoading = useSelector((state) => state.loading.isLoading);\n\n  useEffect(() => {\n    dispatch(getCountriesFromApi());\n  }, [dispatch]);\n\n  if (isLoading) {\n    return <h2>Loading</h2>;\n  }\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<HomePage countries={countries} />} />\n      <Route path=\"/:countryName\" element={<DetailsPage />} />\n    </Routes>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}