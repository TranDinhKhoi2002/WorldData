{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project_ReactJS\\\\WorldData\\\\src\\\\components\\\\NavBar\\\\MainHeader.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport classes from \"./MainHeader.module.css\";\nimport leftArrow from \"../../images/left-arrow.svg\";\nimport mic from \"../../images/mic-icon.svg\";\nimport settings from \"../../images/settings-icon.svg\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { setIsLoading, setIsNotLoading } from \"../../redux/loading-slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainHeader = _ref => {\n  _s();\n\n  let {\n    title\n  } = _ref;\n  const dispatch = useDispatch();\n  const isLoading = useSelector(state => state.loading.isLoading);\n  useEffect(() => {\n    dispatch(setIsLoading(true));\n    dispatch(setIsNotLoading(false));\n  });\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: classes.nav,\n      children: [title === \"Country Info\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: leftArrow,\n            alt: \"Back to home page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: mic,\n          alt: \"Mic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: settings,\n          alt: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainHeader, \"WeZ8ANr/kQJUFcwqnCjAdxoA1iE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = MainHeader;\nMainHeader.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default MainHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainHeader\");","map":{"version":3,"sources":["D:/Project_ReactJS/WorldData/src/components/NavBar/MainHeader.jsx"],"names":["Link","PropTypes","classes","useDispatch","useSelector","useEffect","setIsLoading","setIsNotLoading","MainHeader","title","dispatch","isLoading","state","loading","nav","leftArrow","mic","settings","propTypes","string","isRequired"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,OAAP,MAAoB,yBAApB;;;;AAIA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,2BAA9C;;;AAEA,MAAMC,UAAU,GAAG,QAAe;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAChC,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,SAAS,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcF,SAA1B,CAA7B;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,QAAQ,CAACJ,YAAY,CAAC,IAAD,CAAb,CAAR;AACAI,IAAAA,QAAQ,CAACH,eAAe,CAAC,KAAD,CAAhB,CAAR;AACD,GAHQ,CAAT;;AAKA,MAAII,SAAJ,EAAe;AACb,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAET,OAAO,CAACY,GAAxB;AAAA,iBACGL,KAAK,KAAK,cAAV,iBACC;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA,iCACE;AAAK,YAAA,GAAG,EAAEM,SAAV;AAAqB,YAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQE;AAAA,kBAAMN;AAAN;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEO,GAAV;AAAe,UAAA,GAAG,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,GAAG,EAAEC,QAAV;AAAoB,UAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA/BD;;GAAMT,U;UACaL,W,EACCC,W;;;KAFdI,U;AAiCNA,UAAU,CAACU,SAAX,GAAuB;AACrBT,EAAAA,KAAK,EAAER,SAAS,CAACkB,MAAV,CAAiBC;AADH,CAAvB;AAIA,eAAeZ,UAAf","sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classes from \"./MainHeader.module.css\";\r\nimport leftArrow from \"../../images/left-arrow.svg\";\r\nimport mic from \"../../images/mic-icon.svg\";\r\nimport settings from \"../../images/settings-icon.svg\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { setIsLoading, setIsNotLoading } from \"../../redux/loading-slice\";\r\n\r\nconst MainHeader = ({ title }) => {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector((state) => state.loading.isLoading);\r\n\r\n  useEffect(() => {\r\n    dispatch(setIsLoading(true));\r\n    dispatch(setIsNotLoading(false));\r\n  });\r\n\r\n  if (isLoading) {\r\n    return <h2>Loading</h2>;\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <nav className={classes.nav}>\r\n        {title === \"Country Info\" && (\r\n          <div>\r\n            <Link to=\"/\">\r\n              <img src={leftArrow} alt=\"Back to home page\" />\r\n            </Link>\r\n          </div>\r\n        )}\r\n        <div>{title}</div>\r\n        <div>\r\n          <img src={mic} alt=\"Mic\" />\r\n          <img src={settings} alt=\"Settings\" />\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nMainHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default MainHeader;\r\n"]},"metadata":{},"sourceType":"module"}